!function (t, e, n, a) { "use strict"; var s = "simpleCalendar", i = { months: ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"], days: ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"], displayYear: !0, fixedStartDay: !0, displayEvent: !0, disableEventDetails: !1, disableEmptyDetails: !1, events: [], onInit: function (t) { }, onMonthChange: function (t, e) { }, onDateSelect: function (t, e) { }, onEventSelect: function () { }, onEventCreate: function (t) { }, onDayCreate: function (t, e, n, a) { } }; function r(e, n) { this.element = e, this.settings = t.extend({}, i, n), this._defaults = i, this._name = s, this.currentDate = new Date, this.init() } function d(t, e, n) { events[n].summary = t } t.extend(r.prototype, { init: function () { var e = t(this.element), n = this.currentDate, a = t('<div class="calendar"></div>'), s = t('<header><h2 class="month"></h2><a class="simple-calendar-btn btn-prev btn-prevm" href="#"></a><a class="simple-calendar-btn btn-next btn-nextm" href="#"></a><h4 class="year"></h4><a class="simple-calendar-btn btn-prevy btn-prevy" href="#"></a><a class="simple-calendar-btn btn-nexty btn-nexty" href="#"></a></header> </div>'); this.updateHeader(n, s), a.append(s), this.buildCalendar(n, a), e.append(a), this.bindEvents(), this.settings.onInit(this) }, updateHeader: function (t, e) { var n = this.settings.months[t.getMonth()], a = t.getFullYear(); e.find(".month").html(n), e.find(".year").html(a) }, buildCalendar: function (e, n) { n.find("table").remove(); var a = t("<table></table>"), s = t("<thead></thead>"), i = t("<tbody></tbody>"), r = e.getFullYear(), d = e.getMonth(), h = new Date(r, d, 1), l = new Date(r, d + 1, 0), o = h.getDay(); if (!1 !== this.settings.fixedStartDay) { for (o = !0 === this.settings.fixedStartDay ? 1 : this.settings.fixedStartDay; h.getDay() !== o;)h.setDate(h.getDate() - 1); for (; l.getDay() !== (o + 6) % 7;)l.setDate(l.getDate() + 1) } for (var c = o; c < o + 7; c++)s.append(t("<td>" + this.settings.days[c % 7].substring(0, 3) + "</td>")); for (var u = h; u <= l; u.setDate(u.getDate())) { for (var v = t("<tr></tr>"), c = 0; c < 7; c++) { var f = t('<td><div class="day" data-date="' + u.toISOString() + '">' + u.getDate() + "</div></td>"), g = f.find(".day"); u.toDateString() === (new Date).toDateString() && g.addClass("today"), u.getMonth() != e.getMonth() && g.addClass("wrong-month"); var p = this.getDateEvents(u); p.length && this.settings.displayEvent ? g.addClass(this.settings.disableEventDetails ? "has-event disabled" : "has-event") : g.addClass(this.settings.disableEmptyDetails ? "disabled" : ""), g.data("todayEvents", p), this.settings.onDayCreate(g, u.getDate(), d, r), v.append(f), u.setDate(u.getDate() + 1) } i.append(v) } a.append(s), a.append(i); var m = t('<div class="event-container"><div class="close"></div><div class="event-wrapper"></div></div>'); n.append(a), n.append(m) }, changeMonth: function (e) { this.currentDate.setMonth(this.currentDate.getMonth() + e, 1), this.buildCalendar(this.currentDate, t(this.element).find(".calendar")), this.updateHeader(this.currentDate, t(this.element).find(".calendar header")), this.settings.onMonthChange(this.currentDate.getMonth(), this.currentDate.getFullYear()) }, changeYear: function (e) { this.currentDate.setFullYear(this.currentDate.getFullYear() + e), this.buildCalendar(this.currentDate, t(this.element).find(".calendar")), this.updateHeader(this.currentDate, t(this.element).find(".calendar header")), this.settings.onMonthChange(this.currentDate.getMonth(), this.currentDate.getFullYear()) }, bindEvents: function () { var e = this; t(e.element).off(), t(e.element).on("click", ".btn-prevm", function (t) { e.changeMonth(-1), t.preventDefault() }), t(e.element).on("click", ".btn-nextm", function (t) { e.changeMonth(1), t.preventDefault() }), t(e.element).on("click", ".btn-prevy", function (t) { e.changeYear(-1), t.preventDefault() }), t(e.element).on("click", ".btn-nexty", function (t) { e.changeYear(1), t.preventDefault() }), t(e.element).on("click", ".day", function (n) { var a = new Date(t(this).data("date")), s = e.getDateEvents(a); t(this).hasClass("disabled") || (e.fillUp(n.pageX, n.pageY), e.displayEvents(s)), e.settings.onDateSelect(a, s) }), t(e.element).on("click", ".event-container .close", function (t) { e.empty(t.pageX, t.pageY) }) }, displayEvents: function (e) { var n = this, a = t(this.element).find(".event-wrapper"); e.forEach(function (e) { var s = new Date(e.startDate), i = new Date(e.endDate), r = t('<div class="event"> <div class="event-date">' + n.formatDateEvent(s, i) + '</div> <input type="text" name="summary" onchange=updateEvent(this.value, ' + s + ', event.id)" class="event-summary" value="' + e.summary + '"</input></div>'); r.data("event", e), r.click(n.settings.onEventSelect), n.settings.onEventCreate(r), a.append(r) }) }, addEvent: function (e) { var n = this; n.settings.events = [...n.settings.events, e], this.buildCalendar(this.currentDate, t(this.element).find(".calendar")) }, setEvents: function (e) { var n = this; n.settings.events = e, this.buildCalendar(this.currentDate, t(this.element).find(".calendar")) }, fillUp: function (e, n) { var a = t(this.element), s = a.offset(), i = t('<div class="filler" style=""></div>'); i.css("left", e - s.left), i.css("top", n - s.top), a.find(".calendar").append(i), i.animate({ width: "300%", height: "300%" }, 500, function () { a.find(".event-container").show(), i.hide() }) }, empty: function (e, n) { var a = t(this.element); a.offset(); var s = a.find(".filler"); s.css("width", "300%"), s.css("height", "300%"), s.show(), a.find(".event-container").hide().find(".event").remove(), s.animate({ width: "0%", height: "0%" }, 500, function () { s.remove() }) }, getDateEvents: function (t) { var e = this; return e.settings.events.filter(function (n) { return e.isDayBetween(new Date(t), new Date(n.startDate), new Date(n.endDate)) }) }, isDayBetween: function (t, e, n) { return e.setHours(0, 0, 0), n.setHours(23, 59, 59, 999), t.setHours(12, 0, 0), e <= t && t <= n }, formatDateEvent: function (t, e) { var n = ""; return n += this.settings.days[t.getDay()] + " - " + t.getDate() + " " + this.settings.months[t.getMonth()].substring(0, 3), e.getDate() !== t.getDate() && (n += " to " + e.getDate() + " " + this.settings.months[e.getMonth()].substring(0, 3)), n } }), t.fn[s] = function (e) { return this.each(function () { t.data(this, "plugin_" + s) || t.data(this, "plugin_" + s, new r(this, e)) }) } }(jQuery, window, document);